# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DistToCharger(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, dist_miles=None, dist_km=None):  # noqa: E501
        """DistToCharger - a model defined in Swagger

        :param dist_miles: The dist_miles of this DistToCharger.  # noqa: E501
        :type dist_miles: str
        :param dist_km: The dist_km of this DistToCharger.  # noqa: E501
        :type dist_km: str
        """
        self.swagger_types = {
            'dist_miles': str,
            'dist_km': str
        }

        self.attribute_map = {
            'dist_miles': 'dist_miles',
            'dist_km': 'dist_km'
        }

        self._dist_miles = dist_miles
        self._dist_km = dist_km

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The distToCharger of this DistToCharger.  # noqa: E501
        :rtype: DistToCharger
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dist_miles(self):
        """Gets the dist_miles of this DistToCharger.

        The distance in miles  # noqa: E501

        :return: The dist_miles of this DistToCharger.
        :rtype: str
        """
        return self._dist_miles

    @dist_miles.setter
    def dist_miles(self, dist_miles):
        """Sets the dist_miles of this DistToCharger.

        The distance in miles  # noqa: E501

        :param dist_miles: The dist_miles of this DistToCharger.
        :type dist_miles: str
        """
        if dist_miles is None:
            raise ValueError("Invalid value for `dist_miles`, must not be `None`")  # noqa: E501

        self._dist_miles = dist_miles

    @property
    def dist_km(self):
        """Gets the dist_km of this DistToCharger.

        The distance in km  # noqa: E501

        :return: The dist_km of this DistToCharger.
        :rtype: str
        """
        return self._dist_km

    @dist_km.setter
    def dist_km(self, dist_km):
        """Sets the dist_km of this DistToCharger.

        The distance in km  # noqa: E501

        :param dist_km: The dist_km of this DistToCharger.
        :type dist_km: str
        """
        if dist_km is None:
            raise ValueError("Invalid value for `dist_km`, must not be `None`")  # noqa: E501

        self._dist_km = dist_km
