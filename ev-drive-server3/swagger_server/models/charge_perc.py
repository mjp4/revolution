# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ChargePerc(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, percentage=None):  # noqa: E501
        """ChargePerc - a model defined in Swagger

        :param percentage: The percentage of this ChargePerc.  # noqa: E501
        :type percentage: str
        """
        self.swagger_types = {
            'percentage': str
        }

        self.attribute_map = {
            'percentage': 'percentage'
        }

        self._percentage = percentage

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The chargePerc of this ChargePerc.  # noqa: E501
        :rtype: ChargePerc
        """
        return util.deserialize_model(dikt, cls)

    @property
    def percentage(self):
        """Gets the percentage of this ChargePerc.

        The percentage of battery.  # noqa: E501

        :return: The percentage of this ChargePerc.
        :rtype: str
        """
        return self._percentage

    @percentage.setter
    def percentage(self, percentage):
        """Sets the percentage of this ChargePerc.

        The percentage of battery.  # noqa: E501

        :param percentage: The percentage of this ChargePerc.
        :type percentage: str
        """
        if percentage is None:
            raise ValueError("Invalid value for `percentage`, must not be `None`")  # noqa: E501

        self._percentage = percentage
