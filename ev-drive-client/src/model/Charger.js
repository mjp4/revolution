/**
 * revolution
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: api-support@metaswitch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Revolution) {
      root.Revolution = {};
    }
    root.Revolution.Charger = factory(root.Revolution.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Charger model module.
   * @module model/Charger
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>Charger</code>.
   * @alias module:model/Charger
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>Charger</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Charger} obj Optional instance to populate.
   * @return {module:model/Charger} The populated <code>Charger</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('lat')) {
        obj['lat'] = ApiClient.convertToType(data['lat'], 'String');
      }
      if (data.hasOwnProperty('long')) {
        obj['long'] = ApiClient.convertToType(data['long'], 'String');
      }
      if (data.hasOwnProperty('network')) {
        obj['network'] = ApiClient.convertToType(data['network'], 'String');
      }
      if (data.hasOwnProperty('dist_miles')) {
        obj['dist_miles'] = ApiClient.convertToType(data['dist_miles'], 'String');
      }
      if (data.hasOwnProperty('dist_km')) {
        obj['dist_km'] = ApiClient.convertToType(data['dist_km'], 'String');
      }
      if (data.hasOwnProperty('extra_time')) {
        obj['extra_time'] = ApiClient.convertToType(data['extra_time'], 'String');
      }
      if (data.hasOwnProperty('other')) {
        obj['other'] = ApiClient.convertToType(data['other'], 'String');
      }
    }
    return obj;
  }

  /**
   * latitude
   * @member {String} lat
   */
  exports.prototype['lat'] = undefined;
  /**
   * longitude
   * @member {String} long
   */
  exports.prototype['long'] = undefined;
  /**
   * Network station is on.
   * @member {String} network
   */
  exports.prototype['network'] = undefined;
  /**
   * The distance in miles
   * @member {String} dist_miles
   */
  exports.prototype['dist_miles'] = undefined;
  /**
   * The distance in km
   * @member {String} dist_km
   */
  exports.prototype['dist_km'] = undefined;
  /**
   * Extra time needed
   * @member {String} extra_time
   */
  exports.prototype['extra_time'] = undefined;
  /**
   * Other possible details.
   * @member {String} other
   */
  exports.prototype['other'] = undefined;



  return exports;
}));


